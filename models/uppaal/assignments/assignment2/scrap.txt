bool up = false;

void go_up()
{
    up = true;
}

void go_down()
{
    up = false;
}

// function that returns true if the destination floor is JUST ABOUT to be reached
bool is_dest_reached()
{
    if current_floor[e] == target_floor[e] ||
       up == true && (current_floor[e] + 1) >= target_floor[e] ||
       up == false && (current_floor[e] - 1) <= target_floor[e]
    {
        return true;
    }
    else 
    {
        return false;
    }
}

// returns true if the elevator must go up
bool is_must_go_up ()
{
    if (current_floor[e] < target_floor[e]) 
    {
        return true;
    }
    else 
    {
        return false;
    }
}

// convenience method that returns true if the elevator must go down
bool is_must_go_down ()
{
    return !is_must_go_up();
}

// This function adjusts the current_floor, depending of the movement of direction
void adjust_current_floor()
{
    if (is_must_go_up()) 
    {
        current_floor[e]++;
    }
    else 
    {
        current_floor[e]--;
    }
    //register_floor_reached(current_floor[e]);
}

// Check whether the requested floor is to the same floor
bool is_req_to_same_floor() 
{
    return (target_floor[e] == current_floor[e]);
}

// Set current floor equal to the target floor and
// reset target floor because of performance reasons
void reset() 
{
    current_floor[e] = target_floor[e];
    target_floor[e] = 0;
    up = false;
}