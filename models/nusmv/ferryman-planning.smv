MODULE main
    VAR
        ferryman    : boolean;
        goat        : boolean;
        cabbage     : boolean;
        wolf        : boolean;
        carry       : {g,c,w,0};
    ASSIGN
    init(ferryman) := FALSE; 
    init(goat)     := FALSE;
    init(cabbage)  := FALSE; 
    init(wolf)     := FALSE;
    init(carry)    := 0;
    
    next(ferryman) := {FALSE, TRUE};
    next(carry) := 
        case
            ferryman = goat    : g;
            TRUE               : 0;
        esac union
        case
            ferryman = cabbage : c;
            TRUE               : 0;
        esac union
        case
            ferryman = wolf    : w;
            TRUE               : 0;
        esac union 0;

    next(goat) := 
        case
            ferryman = goat & next(carry) = g : next(ferryman);
            TRUE                              : goat;
    esac;

    next(cabbage) := 
        case
            ferryman = cabbage & next(carry) = c : next(ferryman);
            TRUE                                 : cabbage;
        esac;

    next(wolf) := 
        case
            ferryman = wolf & next(carry) = w : next(ferryman);
            TRUE                              : wolf;
        esac;


--  Interactive mode specifications
-----------------------------------

--  Check whether it is possible to get in a state where all are on the other side of the river
--  check_ctlspec -p "EF(ferryman = TRUE & goat = TRUE & wolf = TRUE & cabbage = TRUE)"

--  Check whether it is possible get in a state where the goat and the wolf are in the same spot
--  while the ferryman is in a different spot
--  check_ctlspec -p "EF(goat = wolf & ferryman != wolf)"